{"ast":null,"code":"// import { combineReducers, applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\"; // import { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { productListReducer, productDetailstReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer } from \"./reducers/userReducers\";\nconst reducers = {\n  productList: productListReducer,\n  productDetails: productDetailstReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n};\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: reducers,\n  preloadState: initialState,\n  middleware: middleware\n});\nlet currentState = store.getState();\nstore.subscribe(() => {\n  let previousState = currentState;\n  currentState = store.getState();\n\n  if (previousState.cart.cartItems !== currentState.cart.cartItems) {\n    localStorage.setItem(\"cartItems\", JSON.stringify(currentState.cart.cartItems));\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","thunk","productListReducer","productDetailstReducer","cartReducer","userLoginReducer","reducers","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store","reducer","preloadState","currentState","getState","subscribe","previousState","setItem","stringify"],"sources":["/home/dea/Projects/CODING AFTER/Little-Shop/frontend/src/store.js"],"sourcesContent":["// import { combineReducers, applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailstReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer } from \"./reducers/userReducers\";\n\nconst reducers = {\n  productList: productListReducer,\n  productDetails: productDetailstReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n};\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = configureStore({\n  reducer: reducers,\n  preloadState: initialState,\n  middleware: middleware,\n});\n\nlet currentState = store.getState();\nstore.subscribe(() => {\n  let previousState = currentState;\n  currentState = store.getState();\n  if (previousState.cart.cartItems !== currentState.cart.cartItems) {\n    localStorage.setItem(\n      \"cartItems\",\n      JSON.stringify(currentState.cart.cartItems)\n    );\n  }\n});\n\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,SACEC,kBADF,EAEEC,sBAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,MAAMC,QAAQ,GAAG;EACfC,WAAW,EAAEL,kBADE;EAEfM,cAAc,EAAEL,sBAFD;EAGfM,IAAI,EAAEL,WAHS;EAIfM,SAAS,EAAEL;AAJI,CAAjB;AAOA,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,YAAY,GAAG;EACnBP,IAAI,EAAE;IAAEQ,SAAS,EAAEN;EAAb;AADa,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACjB,KAAD,CAAnB;AAEA,MAAMkB,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAEd,QADkB;EAE3Be,YAAY,EAAEL,YAFa;EAG3BE,UAAU,EAAEA;AAHe,CAAD,CAA5B;AAMA,IAAII,YAAY,GAAGH,KAAK,CAACI,QAAN,EAAnB;AACAJ,KAAK,CAACK,SAAN,CAAgB,MAAM;EACpB,IAAIC,aAAa,GAAGH,YAApB;EACAA,YAAY,GAAGH,KAAK,CAACI,QAAN,EAAf;;EACA,IAAIE,aAAa,CAAChB,IAAd,CAAmBQ,SAAnB,KAAiCK,YAAY,CAACb,IAAb,CAAkBQ,SAAvD,EAAkE;IAChEL,YAAY,CAACc,OAAb,CACE,WADF,EAEEZ,IAAI,CAACa,SAAL,CAAeL,YAAY,CAACb,IAAb,CAAkBQ,SAAjC,CAFF;EAID;AACF,CATD;AAWA,eAAeE,KAAf"},"metadata":{},"sourceType":"module"}